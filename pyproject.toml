[project]
name = "globus-action-provider-tools"
version = "0.21.0"
description = "Tools to help developers build services that implement the Action Provider specification."
authors = [
    { name = "Globus Team", email = "support@globus.org" },
]
keywords = [
  "globus",
  "automation",
  "workflow",
  "action_provider"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Topic :: Software Development :: Libraries :: Python Modules"
]
readme = "README.rst"
requires-python = ">=3.9"
license = "Apache-2.0"
dependencies = [
    "globus-sdk (>=3.9, <4)",
    "jsonschema (>=4.17, <5)",
    "pyyaml (>=6, <7)",
    "pydantic (>=1.7.3, <2)",
    "isodate (>=0.6, <0.7)",
    "cachetools (>=5.0, <6)",
]

[project.urls]
Source = "https://github.com/globus/action-provider-tools"
Documentation = "https://action-provider-tools.readthedocs.io/en/latest/"

[project.scripts]
whattimeisit-provider = "examples.flask.whattimeisitrightnow.app.app:main"

[project.optional-dependencies]
flask = [
    "flask (>=2.3, <3)",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


# coverage
# --------

[tool.coverage.run]
branch = true
parallel = true
source = [
    "globus_action_provider_tools",
    "tests",
]
[tool.coverage.paths]
source = [
    "src/",
    "*/site-packages/",
]

[tool.coverage.report]
# When the test coverage increases, this bar should also raise.
fail_under = 83


# isort
# -----

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88


# mypy
# ----

[tool.mypy]
sqlite_cache = true
ignore_missing_imports = true
disallow_subclassing_any = false
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_no_return = true
no_implicit_optional = true
# disallow_untyped_defs = true


# pytest
# ------

[tool.pytest.ini_options]
filterwarnings = [
    "error",

    # Minimum Flask versions use a werkzeug version that triggers AST warnings.
    "ignore:.+? is deprecated and will be removed:DeprecationWarning:werkzeug|ast",
    "ignore:Constant\\.__init__ missing 1 required positional argument:DeprecationWarning:ast",
]


# scriv
# -----

[tool.scriv]
categories = [
    "Breaking changes",
    "Security",
    "Deprecations",
    "Python support",
    "Dependencies",
    "Features",
    "Bugfixes",
    "Changes",
    "Documentation",
    "Development",
]
version = "literal: pyproject.toml: project.version"
new_fragment_template = "file: fragment-template.rst.txt"
